using BepInEx.Configuration;
using CSync.Extensions;
using CSync.Lib;
using MoreShipUpgrades.Configuration.Abstractions.OneTimeUpgrades;
using MoreShipUpgrades.Misc.Util;

namespace MoreShipUpgrades.Configuration.Custom
{
    public class MalwareBroadcasterUpgradeConfiguration : OneTimeIndividualUpgradeConfiguration
    {
        [field: SyncedEntryField] public SyncedEntry<bool> DestroyTraps { get; set; }
        [field: SyncedEntryField] public SyncedEntry<bool> ExplodeTraps { get; set; }
        [field: SyncedEntryField] public SyncedEntry<float> DisarmTime { get; set; }
        public MalwareBroadcasterUpgradeConfiguration(ConfigFile cfg, string topSection, string enabledDescription, int defaultPrice) : base(cfg, topSection, enabledDescription, defaultPrice)
        {
            DestroyTraps = cfg.BindSyncedEntry(topSection, LguConstants.MALWARE_BROADCASTER_DESTROY_TRAPS_KEY, LguConstants.MALWARE_BROADCASTER_DESTROY_TRAPS_DEFAULT, LguConstants.MALWARE_BROADCASTER_DESTROY_TRAPS_DESCRIPTION);
            DisarmTime = cfg.BindSyncedEntry(topSection, LguConstants.MALWARE_BROADCASTER_DISARM_TIME_KEY, LguConstants.MALWARE_BROADCASTER_DISARM_TIME_DEFAULT, LguConstants.MALWARE_BROADCASTER_DISARM_TIME_DESCRIPTION);
            ExplodeTraps = cfg.BindSyncedEntry(topSection, LguConstants.MALWARE_BROADCASTER_EXPLODE_TRAPS_KEY, LguConstants.MALWARE_BROADCASTER_EXPLODE_TRAPS_DEFAULT, LguConstants.MALWARE_BROADCASTER_EXPLODE_TRAPS_DESCRIPTION);
        }
    }
}
